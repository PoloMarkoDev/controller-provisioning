def event = currentBuild.getBuildCauses()[0].event
pipeline {
  agent none
  options { timeout(time: 10, unit: 'MINUTES') }
  triggers {
    eventTrigger jmespathQuery("controller.action=='provision'")
  }
  environment {
    GITHUB_ORGANIZATION = event.github.organization.toString().toLowerCase().replaceAll(" ", "-")
    GITHUB_REPOSITORY = event.github.repository.toString.toLowerCase()
    BUNDLE_ID = "${GITHUB_ORGANIZATION}-${GITHUB_REPOSITORY}"
    AVAILABILITY_PATTERN =  "${GITHUB_ORGANIZATION}/${GITHUB_REPOSITORY}"
  }
  stages {
    stage('Provision Managed Controller') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
      }
      steps {
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh '''
            alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -webSocket -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli casc-bundle-set-availability-pattern --bundle-id $BUNDLE_ID --availability-pattern $AVAILABILITY_PATTERN
            cli groovy =<./groovy/casc-workshop-provision-controller-with-casc.groovy
          '''
        }
      }
    }
  }
}
