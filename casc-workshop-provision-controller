def event = currentBuild.getBuildCauses()[0].event
pipeline {
  agent none
  options { timeout(time: 10, unit: 'MINUTES') }
  triggers {
    eventTrigger jmespathQuery("controller.action=='provision'")
  }
  stages {
    stage('Provision Managed Controller') {
      agent  { label 'default-jnlp' }
      environment {
        PROVISION_SECRET = credentials('casc-workshop-controller-provision-secret')
        ADMIN_CLI_TOKEN = credentials('admin-cli-token')
        GITHUB_ORGANIZATION = event.github.organization.toString().replaceAll(" ", "-")
        GITHUB_REPOSITORY = event.github.repository.toString().toLowerCase()
        CONTROLLER_FOLDER = GITHUB_ORGANIZATION.toLowerCase()
        BUNDLE_ID = "${CONTROLLER_FOLDER}-${GITHUB_REPOSITORY}"
        AVAILABILITY_PATTERN = "${GITHUB_ORGANIZATION}/${GITHUB_REPOSITORY}"
        PUBLISH_EVENT_SECRET = event.secret.toString()
      }
      when {
        beforeAgent true
        allOf {
          triggeredBy 'EventTriggerCause'
          equals expected: "${PROVISION_SECRET}", actual: "${PUBLISH_EVENT_SECRET}"
        }
      }
      steps {
        sh '''
          curl -O http://cjoc/cjoc/jnlpJars/jenkins-cli.jar
          alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -webSocket -auth $ADMIN_CLI_TOKEN_USR:$ADMIN_CLI_TOKEN_PSW'
          cli casc-bundle-set-availability-pattern --bundle-id $BUNDLE_ID --availability-pattern $AVAILABILITY_PATTERN
          cli groovy =<casc-workshop-provision-controller-with-casc.groovy $GITHUB_ORGANIZATION $GITHUB_REPOSITORY $CONTROLLER_FOLDER
        '''
      }
    }
  }
}
